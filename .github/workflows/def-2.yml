name: Run deck-def
on:
  push:
    branches:
      - 'main'
    paths:      
      - 'deck/**'
    # paths-ignore:
    #   - 'js/**'
    #   - 'kong-conf/**'
# env:
#   DEF_CHANGED: ${{ github.event_name == 'push' }}
#   CP_CONF_CHANGED: ${{ contains(github.event.commits[0].modified, 'kong-conf/') }}
#   JS_CHANGED: ${{ contains(github.event.commits[0].modified, 'js/') }}

jobs:
  check_run:
    runs-on: kong
    outputs:
      should_run_all: ${{ steps.check.outputs.should_run_all }}
      should_run_vm: ${{ steps.check.outputs.should_run_vm }}
      should_run_deck: ${{ steps.check.outputs.should_run_deck }}
    steps:
    - id: check
      name: Check if files in kong-conf/, js/ or deck/ were modified
      run: |
        should_run_all=false
        should_run_vm=false
        should_run_deck=false
        echo "Modified files: ${{ join(github.event.commits.*.modified, ', ') }}"

        if echo "${{ join(github.event.commits.*.modified, '\n') }}" | grep -qE '^def/' && echo "${{ join(github.event.commits.*.modified, '\n') }}" | grep -qE '^kong-conf/' && echo "${{ join(github.event.commits.*.modified, '\n') }}" | grep -qE '^js/'; then
          should_run_all=true
          echo "Files in kong-conf/, js/ and deck/ were modified"
        fi
        if echo "${{ join(github.event.commits.*.modified, '\n') }}" | grep -qE '^kong-conf/' && echo "${{ join(github.event.commits.*.modified, '\n') }}" | grep -qE '^js/'; then
          should_run_vm=true
          echo "Files in kong-conf/ and js/ were modified"
        fi
        if echo "${{ join(github.event.commits.*.modified, '\n') }}" | grep -qE '^def/'; then
          should_run_deck=true
          echo "Files in deck/ were modified"      
        fi  
        echo "::set-output name=should_run_all::$should_run_all"
        echo "::set-output name=should_run_vm::$should_run_vm"
        echo "::set-output name=should_run_deck::$should_run_deck"
    

  deploy-def:
    needs: check_run
    if: needs.check_run.outputs.should_run_deck == 'true'
    runs-on: kong
    name: Deploying Kong Configuration
    environment: play
    steps:
    - name: Checkout
      uses: actions/checkout@v2.5.0
    - name: Setup Node
      uses: actions/setup-node@v3.5.1
      with:
        node-version: "16"

    - name: Display decK Version
      run: deck version

    - name: Backup existing configuration for a specific tag
      run: deck dump -o kong-dev.yaml --tls-skip-verify
      env:
        DECK_KONG_ADDR: ${{ secrets.KONG_ADMIN_API_URL }}
        DECK_HEADERS: ${{ secrets.KONG_DECK_HEADERS }}

    - name: Validate Deck Config File
      run: deck validate -s ./deck

    - name: Compare Configurations
      run: deck diff  -s ./deck --tls-skip-verify
      env:
        DECK_KONG_ADDR: ${{ secrets.KONG_ADMIN_API_URL }}
        DECK_HEADERS: ${{ secrets.KONG_DECK_HEADERS }}

    - name: Apply new configuration
      run: deck sync  -s ./deck --tls-skip-verify
      env:
        DECK_KONG_ADDR: ${{ secrets.KONG_ADMIN_API_URL }}
        DECK_HEADERS: ${{ secrets.KONG_DECK_HEADERS }}

    - name: Back out changes on failure
      if: ${{ failure() }}
      run: deck sync  -s kong-dev.yaml  --tls-skip-verify
      env:
        DECK_KONG_ADDR: ${{ secrets.KONG_ADMIN_API_URL }}
        DECK_HEADERS: ${{ secrets.KONG_DECK_HEADERS }}
