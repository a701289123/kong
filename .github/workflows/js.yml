name: Run deck
on:
  push:
    branches:
      - 'main'
    paths-ignore:
      - '.github/**'
      - README.md 
      - 'deck/**'
      - 'deck-test1/**' 

jobs:
  deploy_to_clouds:
    runs-on: kong
    name: Deploying Kong Configuration
    environment: play
    steps:
    - name: Checkout
      uses: actions/checkout@v2.5.0
    - name: Setup Node
      uses: actions/setup-node@v3.5.1
      with:
        node-version: "16"
    # - name: Install decK
    #   run: |
    #     curl -sL https://github.com/kong/deck/releases/download/v1.5.1/deck_1.5.1_linux_amd64.tar.gz -o deck.tar.gz
    #     tar -xf deck.tar.gz -C /tmp
    #     cp /tmp/deck /usr/local/bin/

    # - name: Display decK Version
    #   run: deck version

    # - name: Backup existing configuration for a specific tag
    #   run: deck dump -o kong-dev.yaml --tls-skip-verify
    #   env:
    #     DECK_KONG_ADDR: ${{ secrets.KONG_ADMIN_API_URL }}
    #     DECK_HEADERS: ${{ secrets.KONG_DECK_HEADERS }}

    # - name: Validate Deck Config File
    #   run: deck validate -s ./deck

    # - name: Compare Configurations
    #   run: deck diff  -s ./deck --tls-skip-verify
    #   env:
    #     DECK_KONG_ADDR: ${{ secrets.KONG_ADMIN_API_URL }}
    #     DECK_HEADERS: ${{ secrets.KONG_DECK_HEADERS }}

    # - name: Apply new configuration
    #   run: deck sync  -s ./deck --tls-skip-verify
    #   env:
    #     DECK_KONG_ADDR: ${{ secrets.KONG_ADMIN_API_URL }}
    #     DECK_HEADERS: ${{ secrets.KONG_DECK_HEADERS }}

    # - name: Back out changes on failure
    #   if: ${{ failure() }}
    #   run: deck sync  -s kong-dev.yaml  --tls-skip-verify
    #   env:
    #     DECK_KONG_ADDR: ${{ secrets.KONG_ADMIN_API_URL }}
    #     DECK_HEADERS: ${{ secrets.KONG_DECK_HEADERS }}

    - name: copyfile
      run: cp -rf ./js/* /usr/local/kong/js-plugins
        
