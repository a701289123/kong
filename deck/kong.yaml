_format_version: "1.1"
_workspace: test1
services:
- connect_timeout: 60000
  host: pkc-5m9gg.eastasia.azure.confluent.cloud
  name: E2AClickstream1-wtchk
  path: /kafka/v3/clusters/lkc-gq9o2n/topics/elab-asia-ai-recomm-masked-wtchk-dev/records
  port: 443
  protocol: https
  read_timeout: 60000
  retries: 5
  write_timeout: 60000
- connect_timeout: 60000
  host: pkc-5m9gg.eastasia.azure.confluent.cloud
  name: E2AClickstream1-wtctw
  path: /kafka/v3/clusters/lkc-gq9o2n/topics/elab-asia-ai-recomm-masked-wtctw-dev/records
  port: 443
  protocol: https
  read_timeout: 60000
  retries: 5
  routes:
  - https_redirect_status_code: 426
    name: E2AE2A
    path_handling: v0
    paths:
    - /123/test/abc    
    preserve_host: false
    protocols:
    - http
    - https
    regex_priority: 0
    request_buffering: true
    response_buffering: true
    strip_path: true
  - https_redirect_status_code: 426
    name: E2AClickstream
    path_handling: v0
    paths:
    - ~/ai/v2/tracking/(?<bu>[^/]+)/events
    plugins:
    - config:
        content_type: application/json
        custom_fields_by_lua: {}
        flush_timeout: 2
        headers: {}
        http_endpoint: http://192.168.133.134:31311
        keepalive: 60000
        method: POST
        queue_size: 1
        retry_count: 10
        timeout: 10000
      enabled: true
      name: http-log
      protocols:
      - grpc
      - grpcs
      - http
      - https
    - config:
        access:
        - |-
          local aes = require "resty.aes"
          local str = require "resty.string"

          local function aes_encrypt(data, key)
              local aes_128_cbc_with_iv = aes:new(key, nil, aes.cipher(128, "cbc"), { iv = "1234567890123456" })
              return str(aes_128_cbc_with_iv:encrypt(data))
          end

          return function (req)
              local key = "0123456789abcdef"
              local test = req.get_headers()["test"]
              if test ~= nil then
                  local encrypted_test = aes_encrypt(test, key)
                  req.set_header("test", encrypted_test)
              end
          end
        body_filter: []
        certificate: []
        header_filter: []
        log: []
        rewrite: []
        ws_client_frame: []
        ws_close: []
        ws_handshake: []
        ws_upstream_frame: []
      enabled: false
      name: pre-function
      protocols:
      - grpc
      - grpcs
      - http
      - https
    - config:
        add:
          body: []
          headers: []
          json_types: []
          querystring: []
        allow:
          body: null
        append:
          body: []
          headers: []
          json_types: []
          querystring: []
        dots_in_keys: true
        http_method: null
        remove:
          body: []
          headers: []
          querystring: []
        rename:
          body: []
          headers: []
          querystring: []
        replace:
          body: []
          headers: []
          json_types: []
          querystring: []
          uri: /kafka/v3/clusters/lkc-gq9o2n/topics/elab-asia-ai-recomm-masked-wtchk-dev/records
      enabled: false
      name: request-transformer-advanced
      protocols:
      - grpc
      - grpcs
      - http
      - https
    - config:
        rules: []
      enabled: false
      name: route-by-header
      protocols:
      - grpc
      - grpcs
      - http
      - https
    preserve_host: false
    protocols:
    - http
    - https
    regex_priority: 0
    request_buffering: true
    response_buffering: true
    strip_path: true
  write_timeout: 60000
upstreams:
- algorithm: round-robin
  hash_fallback: none
  hash_on: none
  hash_on_cookie_path: /
  healthchecks:
    active:
      concurrency: 10
      healthy:
        http_statuses:
        - 200
        - 302
        interval: 0
        successes: 0
      http_path: /
      https_verify_certificate: true
      timeout: 1
      type: http
      unhealthy:
        http_failures: 0
        http_statuses:
        - 429
        - 404
        - 500
        - 501
        - 502
        - 503
        - 504
        - 505
        interval: 0
        tcp_failures: 0
        timeouts: 0
    passive:
      healthy:
        http_statuses:
        - 200
        - 201
        - 202
        - 203
        - 204
        - 205
        - 206
        - 207
        - 208
        - 226
        - 300
        - 301
        - 302
        - 303
        - 304
        - 305
        - 306
        - 307
        - 308
        successes: 0
      type: http
      unhealthy:
        http_failures: 0
        http_statuses:
        - 429
        - 500
        - 503
        tcp_failures: 0
        timeouts: 0
    threshold: 0
  name: dev
  slots: 10000
